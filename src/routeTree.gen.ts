/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const ProductsLazyImport = createFileRoute('/products')()
const InboxLazyImport = createFileRoute('/inbox')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const CalendarLazyImport = createFileRoute('/calendar')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ProductsLazyRoute = ProductsLazyImport.update({
  path: '/products',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/products.lazy').then((d) => d.Route))

const InboxLazyRoute = InboxLazyImport.update({
  path: '/inbox',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inbox.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const CalendarLazyRoute = CalendarLazyImport.update({
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/calendar.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/inbox': {
      id: '/inbox'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof InboxLazyImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/inbox': typeof InboxLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/inbox': typeof InboxLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/inbox': typeof InboxLazyRoute
  '/products': typeof ProductsLazyRoute
  '/settings': typeof SettingsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar'
    | '/dashboard'
    | '/inbox'
    | '/products'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calendar' | '/dashboard' | '/inbox' | '/products' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/calendar'
    | '/dashboard'
    | '/inbox'
    | '/products'
    | '/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CalendarLazyRoute: typeof CalendarLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  InboxLazyRoute: typeof InboxLazyRoute
  ProductsLazyRoute: typeof ProductsLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CalendarLazyRoute: CalendarLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  InboxLazyRoute: InboxLazyRoute,
  ProductsLazyRoute: ProductsLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/dashboard",
        "/inbox",
        "/products",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/calendar": {
      "filePath": "calendar.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/inbox": {
      "filePath": "inbox.lazy.tsx"
    },
    "/products": {
      "filePath": "products.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
